package LolChatRiotDb;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import LolChatRiotDb.MessageDb;
import LolChatRiotDb.NotificationDb;
import LolChatRiotDb.NotificationCustomDb;

import LolChatRiotDb.MessageDbDao;
import LolChatRiotDb.NotificationDbDao;
import LolChatRiotDb.NotificationCustomDbDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig messageDbDaoConfig;
    private final DaoConfig notificationDbDaoConfig;
    private final DaoConfig notificationCustomDbDaoConfig;

    private final MessageDbDao messageDbDao;
    private final NotificationDbDao notificationDbDao;
    private final NotificationCustomDbDao notificationCustomDbDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        messageDbDaoConfig = daoConfigMap.get(MessageDbDao.class).clone();
        messageDbDaoConfig.initIdentityScope(type);

        notificationDbDaoConfig = daoConfigMap.get(NotificationDbDao.class).clone();
        notificationDbDaoConfig.initIdentityScope(type);

        notificationCustomDbDaoConfig = daoConfigMap.get(NotificationCustomDbDao.class).clone();
        notificationCustomDbDaoConfig.initIdentityScope(type);

        messageDbDao = new MessageDbDao(messageDbDaoConfig, this);
        notificationDbDao = new NotificationDbDao(notificationDbDaoConfig, this);
        notificationCustomDbDao = new NotificationCustomDbDao(notificationCustomDbDaoConfig, this);

        registerDao(MessageDb.class, messageDbDao);
        registerDao(NotificationDb.class, notificationDbDao);
        registerDao(NotificationCustomDb.class, notificationCustomDbDao);
    }
    
    public void clear() {
        messageDbDaoConfig.getIdentityScope().clear();
        notificationDbDaoConfig.getIdentityScope().clear();
        notificationCustomDbDaoConfig.getIdentityScope().clear();
    }

    public MessageDbDao getMessageDbDao() {
        return messageDbDao;
    }

    public NotificationDbDao getNotificationDbDao() {
        return notificationDbDao;
    }

    public NotificationCustomDbDao getNotificationCustomDbDao() {
        return notificationCustomDbDao;
    }

}
